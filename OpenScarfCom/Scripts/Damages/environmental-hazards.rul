extended:
  scripts:
    newTurnUnit:
      - offset: 2
        code: |
          var int LOG 0; # 0: none; 1: simple 2: detailed

          var ptr Tile tile_info;

          var int x;
          var int y;
          var int z;

          var int Hazard_Intensity;
          var int Fire_Duration;

          unit.getPosition.getX x;
          unit.getPosition.getY y;
          unit.getPosition.getZ z;

          battle_game.getTile tile_info x y z;

          tile_info.getSmoke Hazard_Intensity;
          tile_info.getFire Fire_Duration;
          #debug_log "hazard intensity:" Hazard_Intensity "fire duration:" Fire_Duration;

          if and gt Fire_Duration 0 gt Hazard_Intensity 0;
            begin;
              var int Fire_Damage 0;
              var int Total_Fire_Damage 0;

              var ptr RuleArmor Unit_Armor;
              var int Unit_Size; # 1 for small, 2 for big
              var int Unit_Armor_Under;
              var int Resist_Under 70;

              unit.getRuleArmor Unit_Armor;
              Unit_Armor.getSize Unit_Size;
              Unit_Armor.getArmor Unit_Armor_Under 4;
              sub Resist_Under Unit_Armor_Under;


              if ge LOG 1;debug_log "trauma report for:" unit;end;
              if ge LOG 1;debug_log "original hazard intensity:" Hazard_Intensity;end;
              if ge LOG 2;debug_log " armor size" Unit_Size;end;

              #normalizing
              # from 01 02 03 04 05 06 07 08 09 10 11 12
              # to   06 06 06 06 07 07 07 07 08 08 08 08
              if gt Hazard_Intensity 8;
                set Hazard_Intensity 8;
              else gt Hazard_Intensity 4;
                set Hazard_Intensity 7;
              else gt Hazard_Intensity 0;
                set Hazard_Intensity 6;
              end;
              if gt Unit_Size 1;
                div Hazard_Intensity 4;
              end;
              if ge LOG 2;debug_log "normalized hazard intensity:" Hazard_Intensity;end;
              loop var i Hazard_Intensity;
                #set Fire_Damage Hazard_Intensity;
                battle_game.randomRange Fire_Damage 0 Hazard_Intensity;
                unit.reduceByResistance Fire_Damage 2;
                mul Fire_Damage Resist_Under;
                div Fire_Damage 70; # under armor over 70 completely negates fire damage
                mul Fire_Damage -1;
                if ge LOG 2;debug_log "   fire damage for loop" i ":" Fire_Damage;end;
                if lt Fire_Damage 0;
                  unit.addHealth Fire_Damage;
                  unit.addMorale Fire_Damage;
                  add Total_Fire_Damage Fire_Damage;
                end;
              end;
              if ge LOG 1;debug_log "total fire damage [" Total_Fire_Damage "]";end;
              #adds fatal damage (2x2 units are immune)
              if and le Total_Fire_Damage -10 eq Unit_Size 1;
                # START WOUNDED_PART
                # TORSO 1 RL 4 LL 5
                var int Wounded_Part;
                battle_game.randomRange Wounded_Part 3 5;
                if eq Wounded_Part 3; sub Wounded_Part 2; end;
                # FINISH WOUNDED PART
                mul Total_Fire_Damage -1;
                div Total_Fire_Damage 2;
                battle_game.randomRange Total_Fire_Damage 1 Total_Fire_Damage;
                unit.addFatalwounds Wounded_Part Total_Fire_Damage;
                if ge LOG 1;debug_log Total_Fire_Damage "wound to" Wounded_Part;end;
              end;
            end;
          else gt Hazard_Intensity 0;
            div Hazard_Intensity 4;
            battle_game.randomRange Hazard_Intensity 0 Hazard_Intensity;
            unit.reduceByResistance Hazard_Intensity 9;
            if gt Hazard_Intensity 0;
              if ge LOG 1;debug_log "total smoke damage:" Hazard_Intensity;end;
              unit.addStun Hazard_Intensity;
            end;
          end;
          return;